@use "sass:math";

.button {
  height: 50px;
  width: 50px;

  .button_inner.q {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .b_l_quad .button_spots {
    @for $i from 1 through 20 {
      &:nth-child(#{$i}) {
        padding: #{random(3) + 2}px;
        left: #{-25 + ($i * 4)}px;
        top: 40px;
      }
    }
    @for $i from 20 through 40 {
      &:nth-child(#{$i}) {
        padding: #{random(3) + 2}px;
        left: #{-100 + ($i * 4)}px;
        top: -12px;
      }
    }
    @for $i from 40 through 46 {
      &:nth-child(#{$i}) {
        padding: #{random(3) + 2}px;
        left: 40px;
        top: #{-160 + ($i * 4)}px;
      }
    }
    @for $i from 46 through 52 {
      &:nth-child(#{$i}) {
        padding: #{random(3) + 2}px;
        left: -10px;
        top: #{-175 + ($i * 4)}px;
      }
    }
  }

  .button_spots {
    width: 20px;
    height: 20px;
    position: absolute;
    border-radius: 100px;
    opacity: 0;
    z-index: 10;
    animation: opacity 1s;

    @for $i from 1 through 52 {
      &:nth-of-type(#{$i}) {
        transform-origin: #{90px - random(10)} #{20px - random(10)}; // Random origin
        transition: all 1s #{math.div(random(10), 10)}s;             // Random transition delay
      }
    }
  }

  &_inner {
    border-radius: 50%;
    width: 50px;
    height: 50px;
    margin: auto;
    font-weight: 100;
    cursor: pointer;
    transition: all .3s, box-shadow .2s, transform .2s .2s;

    i.l {
      position: relative;
      left: -19px;
      top: 20px;
      color: #00C4FF;
      font-size: 25px;
      opacity: 0;
      transition: left .3s 0s, top .3s 0s, opacity .3s 0s, background-color 0.3s ease;
    }

    &:hover {
      background: $bgColor4;
    }

    &:hover .button_spots {
      @for $i from 1 through 19 {
        &:nth-of-type(#{$i}) {
          animation: spot-#{$i} 1s #{math.div(0.4, random(10)) + math.div(random(10), 10)}s linear infinite;
        }
      }
      @for $i from 20 through 40 {
        &:nth-of-type(#{$i}) {
          animation: spot-#{$i} 1s #{math.div(0.4, random(10)) + math.div(random(10), 10)}s linear infinite;
        }
      }
      @for $i from 40 through 46 {
        &:nth-of-type(#{$i}) {
          animation: spot-#{$i} 1s #{math.div(0.4, random(10)) + math.div(random(10), 10)}s linear infinite;
        }
      }
      @for $i from 46 through 54 {
        &:nth-of-type(#{$i}) {
          animation: spot-#{$i} 1s #{math.div(0.4, random(10)) + math.div(random(10), 10)}s linear infinite;
        }
      }
    }
  }
}

// Keyframes with random movement

@for $i from 1 through 20 {
  @keyframes spot-#{$i} {
    from {
      opacity: 0;
    }
    to {
      transform: translateY(30px) translateX(#{-20 + $i * 2}px);
      opacity: 0.6;
    }
  }
}

@for $i from 20 through 40 {
  @keyframes spot-#{$i} {
    from {
      opacity: 0;
    }
    to {
      transform: translateY(-30px) translateX(#{-50 + $i * 2}px);
      opacity: 0.6;
    }
  }
}

@for $i from 40 through 45 {
  @keyframes spot-#{$i} {
    from {
      opacity: 0;
    }
    to {
      transform: translateY(#{-86 + $i * 2}px) translateX(40px);
      opacity: 0.6;
    }
  }
}

@for $i from 46 through 54 {
  @keyframes spot-#{$i} {
    from {
      opacity: 0;
    }
    to {
      transform: translateY(#{-99 + $i * 2}px) translateX(-40px);
      opacity: 0.6;
    }
  }
}

@keyframes opacity {
  from {
  }
  to {
    opacity: 0;
  }
}

@keyframes rotate {
  from {
    opacity: 0.8;
  }
  to {
    transform: rotate(360deg);
    opacity: 0.8;
  }
}

@keyframes down {
  from {
    left: 10px;
  }
  to {
    left: 57px;
  }
}

@keyframes spew {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.8;
  }
}

@keyframes final {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes finalbox {
  from {
  }
  to {
    width: 50px;
  }
}

@keyframes tick {
  from {
  }
  to {
    transform: scale(1) rotate(-90deg);
  }
}


/* delete anim item */
.dust {
  animation: dustDisappear 0.5s forwards;
}

@keyframes dustDisappear {
  0% {
    opacity: 1;
    transform: scale(1) translateY(0);
    filter: blur(0px);
  }

  100% {
    opacity: 0;
    transform: scale(0.5) translateY(-20px);
    filter: blur(2px);
  }

}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}